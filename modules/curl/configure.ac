# Process this file with autoconf to produce a configure script.
# This is only used for independent module building.
AC_INIT([libcurl API module], [1.0], [xemacs-beta@xemacs.org])
AC_PREREQ(2.53)
AC_REVISION($Revision: 1.1 $)
AC_COPYRIGHT([Configuration script for the curlapi module.
Copyright (C) 2002 Jerry James.
Copyright (C) 2005 Free Software Foundation, Inc.

This file is part of XEmacs.

XEmacs is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your
option) any later version.

XEmacs is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with XEmacs; see the file COPYING.  If not, write to the Free
Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.])

AC_CONFIG_SRCDIR([curlapi.c])
AC_PROG_CC
AC_PROG_INSTALL
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

# Find ELLCC
AC_ARG_VAR([ELLCC], [The path to the ellcc module compiler])
AC_PATH_PROG([ELLCC], [ellcc], ["FAIL"])
AS_IF([test "$ELLCC" = "FAIL"], [AS_ERROR([Cannot find ellcc])])

dnl Insert autoconf macros here to find the headers, libraries, other
dnl programs, etc. needed by your module.  If other libraries will be linked
dnl with your module, then after detecting them, use a line of this form last:
dnl AC_SUBST(sample_libs, "$LIBS")
dnl
dnl XE_DIE(message)
define([XE_DIE], [{ echo "Error:" $1 >&2; exit 1; }])dnl
dnl
# Use curl-config to detect version information.
if ! curl-config --version; then
  XE_DIE("No curl-config or curl-config doesn't grok --version!  Aborting...")
fi
CURL_VERSION_STRING=`curl-config --version`
case $CURL_VERSION_STRING in
libcurl *.*.* )
  AC_MSG_WARN([Found parsable curl version string: $CURL_VERSION_STRING.])
  CURL_VERSION_MAJOR=`echo $CURL_VERSION_STRING | sed -e 's/^libcurl \([0-9]*\)\.[0-9]*\.[0-9]*$/\1/'`
  CURL_VERSION_MINOR=`echo $CURL_VERSION_STRING | sed -e 's/^libcurl [0-9]*\.\([0-9]*\)\.[0-9]*$/\1/'`
  CURL_VERSION_MICRO=`echo $CURL_VERSION_STRING | sed -e 's/^libcurl [0-9]*\.[0-9]*\.\([0-9]\)*$/\1/'`
  AC_MSG_WARN([Parse is $CURL_VERSION_MAJOR,$CURL_VERSION_MINOR,$CURL_VERSION_MICRO.])
 ;;
* )
  AC_MSG_WARN([Can't parse value of `curl-config --version': $CURL_VERSION_STRING.]) ;;
esac

# use curl-config to detect cflags
# CURRENTLY UNUSED
# NOTE: The -I generated by curl-config (curl 7.15.5) does not include the
# curl directory.  I think this is good practice.
curl_cflags=`curl-config --cflags`

# use curl-config to detect libraries and related flags
curl_libs=`curl-config --libs`

AC_SUBST(CURL_VERSION_STRING)
AC_SUBST(CURL_VERSION_MAJOR)
AC_SUBST(CURL_VERSION_MINOR)
AC_SUBST(CURL_VERSION_MICRO)
AC_SUBST(curl_libs)
 
# This part should appear unchanged in every module configure.ac
AC_SUBST(PROGNAME, "module")
AC_SUBST(MOD_CC, "@ELLCC@")
AC_SUBST(MODARCHDIR, "\$(shell @ELLCC@ --mod-archdir)")
AC_SUBST(MAKE_DOCFILE, "\$(MODARCHDIR)/make-docfile")
AC_SUBST(MODCFLAGS, "\$(CFLAGS) --mode=compile --mod-output=\$@ -I\$(MODARCHDIR)/include")
AC_SUBST(INSTALLPATH, "\$(shell @ELLCC@ --mod-site-location)")
AC_SUBST(MOD_INSTALL_PROGRAM, "@INSTALL_PROGRAM@")
AC_SUBST(OBJECT_TO_BUILD, "\$(MODNAME).ell")

AC_CONFIG_FILES([Makefile.in Makefile])
AC_OUTPUT
