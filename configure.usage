Usage: configure [--OPTION[=VALUE] ...] [CONFIGURATION]

Set compilation and installation parameters for XEmacs, and report.

Note that for most of the following options, you can explicitly enable
them using `--OPTION=yes' and explicitly disable them using `--OPTION=no'.
This is especially useful for auto-detected options.
The option `--without-FEATURE' is a synonym for `--with-FEATURE=no'.

Options marked with a (*) are auto-detected.

Many features require external packages to be installed first.
Get them from ftp://ftp.xemacs.org/pub/xemacs/aux.

Use colons (or quoted spaces) to separate directory names in option
values which are PATHs (i.e. lists of directories).

The results of configure tests are saved in config.log, which is useful
for diagnosing problems.


General options:
----------------

--help                  Issue this usage message.
--verbose               Accepted but ignored.
--extra-verbose         Display more information, useful for debugging.


Compilation options:
--------------------

--compiler=PROG         C compiler to use
--xemacs-compiler=PROG  compiler to use to compile just the xemacs executable.
			If you want to compile XEmacs as C++, use e.g.
			`--xemacs-compiler=g++'.  This turns on a lot of
			additional error-checking.
--with-gcc (*)          Use GCC to compile XEmacs.
--cflags=FLAGS          Compiler flags (such as -O); setting this overrides
                        all default compiler flags except those that control
                        warnings.
--cflags-warning=FLAGS  Override compiler flags used to control warnings.
                        Normally, don't set this, as XEmacs already turns on
                        the maximum safe warning level.
--with-optimization     Control whether compilation is optimized.
                        By default, optimization is on in release versions
                        and off in beta versions, since it can interfere
                        with proper stack backtraces.
--cflags-optimization=FLAGS
                        Override compiler flags used to control optimization.
			Only has an effect when optimization is enabled.
                        Normally, don't set this, as XEmacs will already set
                        the maximum safe optimization flags appropriate for
                        the compiler being invoked.
--cflags-debugging=FLAGS
                        Override compiler flags used to add debugging
                        information to the executable.  Normally, debugging
                        information is added whenever possible (i.e. unless
                        optimization is turned on and the compiler does not
                        permit debugging and optimization simultaneously).
--cpp=PROG              C preprocessor to use (e.g. /usr/ccs/lib/cpp or cc -E)
--cppflags=FLAGS        C preprocessor flags (e.g. -I/foo or -Dfoo=bar)
--libs=LIBS             Additional libraries (e.g. -lfoo)
--ldflags=FLAGS         Additional linker flags (e.g. -L/foo)
--site-includes=PATH    List of directories to search first for header files
--site-libraries=PATH   List of directories to search first for libraries
--site-prefixes=PATH    List of directories to search for include/ and lib/
                        subdirectories, just after 'site-includes' and
                        'site-libraries'
--site-runtime-libraries=PATH
                        List of ALL directories to search for dynamically
                        linked libraries at run time
--dynamic=yes           Link dynamically if supported by system.
--dynamic=no            Force static linking on systems where dynamic
                        linking is the default.
--srcdir=DIR            Look for the XEmacs source files in DIR.
                        Works best when using GNU Make.  Allows you to build
			XEmacs in various different ways using the same
			source tree.


Installation options:
---------------------

--prefix=DIR            Install files below DIR.  Defaults to `/usr/local'.
--with-prefix=no        Don't compile the value of --prefix into the
                        executable.
--with-netinstall       Compile in support for installation over the internet.
                        Only functional on the MS Windows platforms.
--bindir=DIR
--datadir=DIR
--statedir=DIR
--libdir=DIR
--infodir=DIR
--mandir=DIR
--lispdir=DIR
--sitelispdir=DIR
--etcdir=DIR
--lockdir=DIR
--archlibdir=DIR
--docdir=DIR
--moduledir=DIR
			You may also control individually where various
			parts of XEmacs are installed.  Note that we
			recommend against explicitly setting any of these
			variables.  See the INSTALL file for a complete list
			plus the reasons we advise not changing them.


Run-time path-searching options:
--------------------------------

--with-site-lisp=yes    Allow for a site-lisp directory in the XEmacs hierarchy
                        searched before the installation packages.
--with-site-modules=no  Disable site-modules directory in the XEmacs hierarchy,
                        which is searched before the installation modules.
--package-prefix=PATH   Specify a directory under which packages will
                        be searched.  The directories `xemacs-packages' and
                        (if MULE support exists) `mule-packages' (along with,
                        optionally, `site-packages') should exist under this
                        directory.  This is preferred to specifying
                        `--package-path' directly and is equivalent to
                        --package-path="~/.xemacs::${package-prefix}/\
                        site-packages:${package_prefix}/xemacs-packages:\
                        ${package_prefix}/mule-packages"
                        (or the same without `.../mule-packages' if no
                        MULE support exists)
--package-path=PATH     Directories to search for packages to dump with xemacs.
                        PATH splits into three parts separated by double
                        colons (::), an early, a late, and a last part,
                        corresponding to their position in the various
                        system paths:  The early part is always first,
                        the late part somewhere in the middle, and the
                        last part at the very back.
                        Only the late part gets seen at dump time.
                        If PATH has only one component, that component
                        is late.
                        If PATH has two components, the first is
                        early, the second is late.
--infopath=PATH         Directories to search for Info documents, info dir
                        and localdir files in case run-time searching
                        for them fails.


Window-system options:
----------------------

--with-gtk              Support GTK on the X Window System. (EXPERIMENTAL)
--with-gnome            Support GNOME on the X Window System. (EXPERIMENTAL)
--with-x11 (*)          Support the X Window System.
--x-includes=DIR        Search for X header files in DIR.
--x-libraries=DIR       Search for X libraries in DIR.
--with-msw (*)          Support MS Windows as a window system (only under
                        Cygwin and MinGW).  `--with-msw=no' may be needed on
                        *nix systems with Wine installed.
--with-toolbars=no      Don't compile with any toolbar support.
--with-wmcommand=no     Compile without realized leader window which will
                        keep the WM_COMMAND property.
--with-athena=TYPE      Use TYPE Athena widgets (xaw, 3d, next, 95, or xpm).
--with-menubars=TYPE    Use TYPE menubars (lucid, motif, or no).  The Lucid
                        widgets emulate Motif (mostly) but are faster.
                        *WARNING*  The Motif menubar is currently broken.
                        Lucid menubars are the default.
--with-scrollbars=TYPE  Use TYPE scrollbars (lucid, motif, athena, or no).
                        Lucid scrollbars are the default.
--with-dialogs=TYPE     Use TYPE dialog boxes (lucid, motif, athena, or no).
                        There are no true Lucid dialogs; Motif dialogs will be
                        used if Motif can be found, else Athena is used.
--with-widgets=TYPE     Use TYPE native widgets (lucid, motif, athena, or no).
                        Other widget types are currently unsupported.
                        There are no true Lucid widgets; Motif widgets will be
                        used if Motif can be found, else Athena is used.
--with-dragndrop        Compile in the generic drag and drop API. This is
                        automatically added if one of the drag and drop
                        protocols is found (currently CDE, OffiX, MSWindows,
                        and GTK).
                        *WARNING*  The Drag'n'drop support is under development
                                   and is considered experimental.
--with-cde              Compile in support for CDE drag and drop.
--with-offix            Compile in support for OffiX drag and drop.
                        *WARNING*  If you compile in OffiX, you may not be
                                   able to use multiple X displays success-
                                   fully.  If the two servers are from
                                   different vendors, the results may be
                                   unpredictable.
--with-xmu=no (*)       For those unfortunates whose vendors don't ship Xmu.
--external-widget       Compile with external widget support.


TTY (character terminal) options:
---------------------------------

--with-tty=no           Don't support ttys.
--with-ncurses (*)      Use the ncurses library for tty support.
--with-gpm (*)          Compile in GPM mouse support for ttys.


Image options:
--------------

--with-xpm (*)          Compile with support for XPM images.  PRACTICALLY
                        REQUIRED.  Although this library is nonstandard and
                        a real hassle to build, many basic things (e.g.
                        toolbars) depend on it, and you will run into
                        many problems without it.
--with-png (*)          Compile with support for PNG images.  Recommended
                        because the images on the About page are not viewable
                        without it.
--with-jpeg (*)         Compile with support for JPEG images.  Useful if
                        you are using a mail, news reader, or web browser
                        in XEmacs, so that JPEG images can be displayed.
--with-tiff (*)         Compile with support for TIFF images.  Possibly
                        useful, for the same reason as JPEG images.
--with-xface (*)        Compile with support for X-Face mail headers.
                        Requires the compface package.  Of doubtful
                        usefulness.
--with-gif=no           Compile without the (builtin) support for GIF images.


Sound options:
--------------

--with-sound=TYPE[,TYPE[,...]] (*) Compile with sound support.
                        Valid types are `native', `nas' and `esd'.
                        Prefix a type with 'no' to disable.
                        The first type can be `none' or `all'.  `none' means
                        `nonative,nonas,noesd'.  `all' means `native,nas,esd'.
                        Later options override earlier ones for the same TYPE.
                        The default is to autodetect all sound support except 
                        for ESD which defaults to off.
--native-sound-lib=LIB  Native sound support library.  Needed on Suns
                        with `--with-sound=native,nas' because both sound
                        libraries are called libaudio.


Internationalization options:
-----------------------------

--with-mule             Compile with Mule (MUlti-Lingual Emacs) support,
                        needed to support non-Latin-1 (including Asian)
                        languages.
--with-xim=xlib         Compile with support for X input methods,
--with-xim=motif (*)    Used in conjunction with Mule support.
                        Use either raw Xlib to provide XIM support, or
                        the Motif XmIm* routines (when available).
                        NOTE:  On some systems bugs in X11's XIM support
                        will cause XEmacs to crash, so by default,
                        no XIM support is compiled in, unless running
                        on Solaris and the XmIm* routines are detected.
--with-canna (*)        Compile with support for Canna (a Japanese input method
                        used in conjunction with Mule support).
--with-wnn (*)          Compile with support for Wnn (a multi-language input
                        method used in conjunction with Mule support).
--with-wnn6 (*)         Compile with support for the commercial package Wnn6.
--with-i18n3            Compile with I18N level 3 (support for message
                        translation).  This doesn't currently work.
--with-xfs              Compile with XFontSet support for internationalized
                        menubar.  Incompatible with `--with-xim=motif'.
                        `--with-menubars=lucid' (the default) is desirable.


File-related options:
---------------------

--with-default-eol-detection
                        Turns on by default auto-detection of end-of-line type
			when reading a file.  Applies to those platforms where
			auto-detection is off by default (non-Mule Unix).  Has
			no effect otherwise.
--with-clash-detection=no
			Disable use of lock files to detect multiple edits
			of the same file.


Database options:
-----------------

--with-database=TYPE (*) Compile with database support.  Valid types are
                        `no' or a comma-separated list of one or more
                        of `berkdb' and either `dbm' or `gnudbm'.
--with-ldap (*)         Compile with support for the LDAP protocol.
--with-postgresql (*)   Compile with support for the PostgreSQL RDBMS.


Mail options:
-------------

--mail-locking=TYPE (*) Specify the locking to be used by movemail to prevent
                        concurrent updates of mail spool files.  Valid types
                        are `lockf', `flock', `file', `dot' (same as `file'),
                        `locking', `mmdf' and `pop' (equivalent to
                        `--with-pop=yes').
--with-pop              Support POP for mail retrieval.
--with-kerberos         Support Kerberos-authenticated POP.
--with-hesiod           Support Hesiod to get the POP server host.


Networking options:
-------------------

--with-tooltalk (*)     Support the ToolTalk IPC protocol.
--with-socks            Compile with support for SOCKS (an Internet proxy).
--with-dnet (*)         Compile with support for DECnet.
--with-ipv6-cname	Try IPv6 information first when canonicalizing host
                        names.  This option has no effect unless system
                        supports getaddrinfo(3) and getnameinfo(3).


Memory allocation options:
--------------------------

--rel-alloc             Use the relocating allocator (default for this option
                        is system-dependent).
--with-dlmalloc         Control usage of Doug Lea malloc on systems that have
                        it in the standard C library (default is to use it if
                        it is available).
--with-system-malloc    Force use of the system malloc, rather than GNU malloc.
--with-debug-malloc     Use the debugging malloc package.


Emacs Lisp options:
-------------------

--use-number-lib=TYPE   Compile in support for bignums, ratios, or bigfloats
                        using library support.  TYPE must be one of "gmp"
                        (for GNU MP), "mp" (for BSD MP), or "no" (disabled).


Debugging options:
------------------

--debug                 Compile with support for debugging XEmacs.
                        (Causes code-size increase and little loss of speed.)
--error-checking=TYPE[,TYPE]...
                        Compile with internal error-checking added.
                        Causes noticeable loss of speed.  Valid types
                        are extents, bufpos, malloc, gc, typecheck.
--error-checking=none   Disable all internal error-checking (the default).
--error-checking=all    Enable all internal error-checking.
--memory-usage-stats    Compile with additional code to allow you to
                        determine what XEmacs's memory is being used
                        for.  Causes a small code increase but no loss
                        of speed.  Normally enabled when --debug is given.
--quick-build           Speed up the build cycle by leaving out steps where
                        XEmacs will still work (more or less) without them.
                        Potentially dangerous if you don't know what you're
                        doing. This (1) doesn't garbage-collect after loading
                        each file during dumping, (2) doesn't
                        automatically rebuild the DOC file (remove it by hand
                        to get it rebuilt), (3) Removes config.h, lisp.h and
                        associated files from the dependency lists, so changes
                        to these files don't automatically cause all .c files
                        to be rebuilt.
--use-union-type        Enable or disable use of a union, instead of an
                        int, for the fundamental Lisp_Object type; this
                        provides stricter type-checking.  WARNING: This has
			a tendency to trigger compiler bugs, especially in
			combination with other features that increase the
			complexity of expressions, for example `--with-mule'
			and `--error-checking=all'.  Crashes have been
			observed with union type in combination with the
			two options just mentioned under various versions of
			GCC as well as MSVC++ 6.0.  Furthermore, many
			debuggers have problems (i.e. bugs) dealing with
			unions, and even for those that don't, debugging can
			be inconvenient because of no syntax for entering a
			union.  We recommend `--use-union-type' *ONLY* for
			testing purposes, not for production builds.  If you
			are using `-use-union-type' and get some weird
			crash, try redoing without union type.
--with-quantify         Add support for performance debugging using Quantify.
--with-purify           Add support for memory debugging using Purify.


Developer options:
------------------

--with-workshop         Support the Sun WorkShop (formerly Sparcworks)
                        development environment.
--pdump                 New, portable, relocatable dumper.  Currently works
			quite well, somewhere in beta-to-late-beta, we
			might say. (Infamous for being the former
			"experimental, don't-sue-me-if-your-house-collapses-
			and-your-wife-leaves-you" portable dumper.)
--dump-in-exec		Put the dump image into the executable (enabled by
			default for `pdump', not enabled by default in
			combination with `mc-alloc'.
--use-kkcc              Enable the use of new GC algorithms. (EXPERIMENTAL)
--mc-alloc              Enable the new allocator. (EXPERIMENTAL)
--with-modules (*)      Compile in experimental support for dynamically
                        loaded libraries (Dynamic Shared Objects).


If successful, configure leaves its status in config.status.  If
unsuccessful after disturbing the status quo, it removes config.status.

The configure script also recognizes some environment variables, each
of which is equivalent to a corresponding configure flag.  Configure
flags take precedence over environment variables, if both are specified.

environment   corresponding
variable      configure flag
-----------   --------------
CC            --compiler
XEMACS_CC     --xemacs-compiler
CPP           --cpp
CFLAGS        --cflags
CPPFLAGS      --cppflags
LDFLAGS       --ldflags
LIBS          --libs
LD_RUN_PATH   --site-runtime-libraries

For more details on the install process, consult the INSTALL file.
